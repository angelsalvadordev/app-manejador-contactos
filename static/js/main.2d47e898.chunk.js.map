{"version":3,"sources":["components/Intro.jsx","context/ContactsContext.js","components/CounterContacts.jsx","components/Searcher.jsx","context/actionsCreators.js","context/actions.js","components/Contact.jsx","components/ContactsGroup.jsx","context/store.js","context/ContactsProvider.jsx","App.jsx","index.js"],"names":["Intro","className","ContactsContext","React","createContext","CounterContacts","useContext","ContactContext","state","contacts","length","Searcher","dispatch","onKeyUp","e","type","data","target","value","placeholder","Contact","contact","fullName","name","surname","onClick","src","photo","alt","phone","email","ContactsGroup","normalizeName","replace","filter","completeName","toLowerCase","includes","search","map","index","key","initialContacts","contactsReducer","action","concat","window","confirm","word","console","log","ContactsProvider","props","useReducer","useEffect","fetch","then","resp","json","Provider","children","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d47e898.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Intro = () => {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"intro col\">\r\n                <h1 className=\"intro__title text-center\">MANEJADOR<span className=\"font-weight-normal\">DE</span>CONTACTOS</h1>\r\n                <h2 className=\"intro__subtitle font-weight-normal text-center\">Busca y elimina cualquier contacto</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Intro\r\n","import React from \"react\"\r\n\r\nconst ContactsContext = React.createContext()\r\n\r\nexport default ContactsContext","import React, { useContext } from 'react'\r\nimport ContactContext from \"../context/ContactsContext\"\r\n\r\nconst CounterContacts = () => {\r\n\r\n  const [state] = useContext(ContactContext)\r\n\r\n  return (\r\n    <div className=\"row justify-content-center\">\r\n      <div className=\"col-6 col-md-2 bg-danger counter-contacts\">\r\n        Contactos:<span>{state.contacts.length}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CounterContacts\r\n","import React, { useContext } from 'react'\r\n\r\nimport ContactsContext from \"../context/ContactsContext\"\r\nimport { actionSearch } from '../context/actionsCreators';\r\n\r\nconst Searcher = () => {\r\n    const [state, dispatch] = useContext(ContactsContext)\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col \">\r\n                <div className=\"col d-flex bg-secondary searcher mb-1\">\r\n                    <input onKeyUp={e => dispatch(actionSearch(e.target.value))} className=\"col searcher__input bg-secondary text-white\" type=\"text\" placeholder=\"Buscar contacto\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Searcher\r\n","import { GET_API, SEARCH_CONTACT, REMOVE_CONTACT } from \"./actions\";\r\n\r\nexport const actionAPI = data => (\r\n  {\r\n    type: GET_API,\r\n    data\r\n  }\r\n)\r\n\r\nexport const actionSearch = data => (\r\n  {\r\n    type: SEARCH_CONTACT,\r\n    data\r\n  }\r\n)\r\n\r\nexport const actionRemoveContact = data => (\r\n  {\r\n    type: REMOVE_CONTACT,\r\n    data\r\n  }\r\n)","export const SEARCH_CONTACT = \"SEARCH_CONTACT\"\r\nexport const REMOVE_CONTACT = \"REMOVE_CONTACT\"\r\nexport const GET_API = \"GET_API\"","import React, { useContext } from 'react'\r\n\r\nimport ContactsContext from \"../context/ContactsContext\"\r\nimport { actionRemoveContact } from '../context/actionsCreators';\r\n\r\nconst Contact = ({ contact }) => {\r\n\r\n    const [state, dispatch] = useContext(ContactsContext)\r\n    const fullName = contact.name + contact.surname //Para eliminar el contacto exacto\r\n    return (\r\n        <div className=\"col-12 col-md-6 col-lg-4 mt-2 mb-2\">\r\n            <div className=\"row no-gutters contact bg-light pt-2 pb-2\" onClick={() => dispatch(actionRemoveContact(fullName))}>\r\n                <div className=\"col-3 ml-2 d-flex align-items-center justify-content-end contact-image\">\r\n                    <img className=\"contact-image__photo\" src={contact.photo} alt={`Imagen de ${contact.name}`} />\r\n                </div>\r\n                <div className=\"col contact-info\">\r\n                    <h6 className=\"contact-info__name\">{`${contact.name} ${contact.surname}`}</h6>\r\n                    <span className=\"contact-info__phone\">{contact.phone}</span>\r\n                    <span className=\"contact-info__mail\">{contact.email}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","import React, { useContext } from 'react'\r\nimport Contact from './Contact';\r\nimport ContactsContext from \"../context/ContactsContext\"\r\n\r\nconst ContactsGroup = () => {\r\n\r\n    const [state] = useContext(ContactsContext)\r\n\r\n    const filterContacts = contact => {\r\n        // concatenar nombre: Ángel Salvador => ángelsalvador \r\n        let completeName = `${contact.name} ${contact.surname}`\r\n        completeName = completeName.toLowerCase()\r\n\r\n        // Quitar tildes y ñ\r\n        completeName = normalizeName(completeName)\r\n\r\n        // Buscar coincidencias de la busqueda\r\n        return completeName.includes(state.search)\r\n    }\r\n\r\n    //Normalizar nombre: ángelsalvador => angelsalvador\r\n    const normalizeName = name => {\r\n        name = name.replace(/á/gi, \"a\");\r\n        name = name.replace(/é/gi, \"e\");\r\n        name = name.replace(/í/gi, \"i\");\r\n        name = name.replace(/ó/gi, \"o\");\r\n        name = name.replace(/ú/gi, \"u\");\r\n        name = name.replace(/ñ/gi, \"n\");\r\n        return name;\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {state.contacts.filter(filterContacts).map((contact, index) => <Contact key={index} contact={contact} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactsGroup\r\n","import { GET_API, REMOVE_CONTACT, SEARCH_CONTACT, } from \"./actions\"\r\nimport { useReducer } from \"react\"\r\n\r\nexport const initialContacts = {\r\n  contacts: [],\r\n  search: \"\"\r\n}\r\n\r\n//Reducer\r\nexport const contactsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    // Agregar datos de API al estado\r\n    case GET_API:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.concat(action.data)\r\n      }\r\n\r\n    case REMOVE_CONTACT:\r\n      const confirmation = window.confirm('Seguro que desea eliminar este contacto ?')\r\n      if (confirmation) {\r\n        return {\r\n          ...state,\r\n          contacts: state.contacts.filter(contact => {\r\n            const fullName = contact.name + contact.surname //Nombre completo para filtro exacto\r\n            return fullName !== action.data\r\n          })\r\n        }\r\n      }\r\n      return state\r\n\r\n    case SEARCH_CONTACT:\r\n      let word = action.data\r\n      word = word.toLowerCase()\r\n      return {\r\n        ...state,\r\n        search: word\r\n      }\r\n\r\n    default: console.log('error inesperado', action.type)\r\n      break\r\n  }\r\n}","// Creando componente Provider\r\nimport React, { useEffect, useReducer } from \"react\"\r\n\r\nimport { contactsReducer, initialContacts } from \"./store\"\r\nimport ContactsContext from \"./ContactsContext\"\r\nimport { actionAPI } from \"./actionsCreators\";\r\n\r\n// Componente Provider\r\nconst ContactsProvider = props => {\r\n\r\n  const [state, dispatch] = useReducer(contactsReducer, initialContacts)\r\n\r\n  // Conexion con API y actualizacion del store\r\n  useEffect(() => {\r\n    fetch('https://uinames.com/api/?amount=25&region=mexico&ext')\r\n      .then(resp => resp.json())\r\n      .then(resp => dispatch(actionAPI(resp)))\r\n  }, [])\r\n\r\n  return (\r\n    // Envolver componentes para conexion con store global\r\n    <ContactsContext.Provider value={[state, dispatch]}>\r\n      {props.children}\r\n    </ContactsContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ContactsProvider\r\n","import React from 'react'\r\n\r\n// Components\r\nimport Intro from './components/Intro';\r\nimport CounterContacts from './components/CounterContacts';\r\nimport Searcher from './components/Searcher';\r\nimport ContactsGroup from './components/ContactsGroup';\r\nimport ContactsProvider from \"./context/ContactsProvider\"\r\n\r\n// Styles\r\nimport \"./styles/custom/css/main.css\"\r\n\r\nconst App = () => {\r\n    return (\r\n        // Envolviendo todo el componente para estado global\r\n        <ContactsProvider>\r\n            <div className=\"container pt-4\">\r\n                <Intro />\r\n                <CounterContacts />\r\n                <Searcher />\r\n                <ContactsGroup />\r\n            </div>\r\n        </ContactsProvider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Components\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}